#include <iostream>
using namespace std;

const int SIZE=50;

int seqSearch(int[], int, int, int&);
int binSearch(int[], int, int, int&);

int main(){
    
    int arr[SIZE];
    int key, seqCount=0;
	int binCount=0;

	cout << binCount << " is binCount" << endl;

    cout << "Enter a number to search for:" << endl;
    cin >> key;

    for(int i=0;i<SIZE;i++){
        arr[i]=i;  // generate a 50 element array to be searched within
    }

    seqSearch(arr, SIZE, key, seqCount);
    binSearch(arr, SIZE, key, binCount);
	cout << "\nIt took " << seqCount << " times for Sequential search to find " << key << endl;
	cout << "\nIt took " << binCount << " times for Binary search to find " << key << endl;
	
}

// progress
// arr[] is getting built in main correctly
// functions are calling, returning, but if logic not finding key some reason

int seqSearch(int arr[], int SIZE, int key, int &seqcount){
	cout << "Sequential Search is being called...\n";
	cout << "Looking for " << key << " " << SIZE << " " << arr[5] << " " << arr[1] << " " << arr[2] << endl;
    int gotem;
    
    for (int i=0; i<SIZE; i++){
        seqcount++;
        if (arr[key]==key) {
            cout << "seqsearch found " << key << " at " << arr[i] << endl;
            gotem++;
			return gotem;
        }
    }
    cout << "seqsearch no found after" << seqcount << " searches.\n";
    return gotem=-1;
}

int binSearch(int arr[], int SIZE, int key, int &bincount)
{
	cout << "\n\nBinary Search is being called...\n"; // checking function working or not
	cout << key << endl;
	
	int found, position=-1;
	int first=0;
	int last=SIZE-1;
	int mid;
	while(last >= first && position==-1)
	{
		bincount++;
		cout << "While loop running yes\n" << bincount << endl;
		mid=(first+last)/2;
		if (arr[mid]==key)
		{
			position = mid;
		} else if (arr[mid] > key){ 
			last = mid-1;
		} else if (arr[mid] < key){
			first = mid+1;
		}
	}
	if (position == -1){
		cout << "Number not found\n";
	} else {
		cout << "Found target at index " << position << endl;		
	}
}
