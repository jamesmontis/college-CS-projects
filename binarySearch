// James Montis 
// Binary search


#include <iostream>
using namespace std;

const int SIZE=10;
int binSearch(int arr[], int SIZE, int key);

int main(){
	int arr[SIZE]={123,267,297,335,555,624,777,794,856,931};
	int key;
	
	cout << "\n\nEnter a number to search for\nIf -1 is displayed, it was not found\n\n";
	cin >> key;
	
	binSearch(arr, SIZE, key);
	
	return 0;
}

int binSearch(int arr[], int SIZE, int key)
{
	cout << "\n\nFunction is being called\n\n"; // checking function working or not
	cout << key << endl;
	
	int found, position;
	int first=0;
	int last=SIZE-1;
	int mid;
	while(last >= first && position==-1)
	{
		mid=(first+last)/2;
		if (arr[mid]==key)
		{
			position = mid;
		} else if (arr[mid] > key){ 
			last = mid-1;
		} else if (arr[mid] < key){
			first = mid+1;
		}
	}
	if (position == -1){
		cout << "Number not found\n";
	} else {
		cout << "Found target at index " << position << endl;		
	}
}
